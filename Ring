local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Mouse = LocalPlayer:GetMouse()

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game.CoreGui
ScreenGui.ResetOnSpawn = false

local Frame = Instance.new("Frame")
Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Frame.Size = UDim2.new(0, 300, 0, 200)
Frame.Position = UDim2.new(0.5, -150, 0.2, 0)
Frame.Active = true
Frame.Draggable = true

local UICorner = Instance.new("UICorner", Frame)
UICorner.CornerRadius = UDim.new(0, 10)

-- Title Label
local Title = Instance.new("TextLabel", Frame)
Title.Text = "Ring of DEATH"
Title.Font = Enum.Font.GothamBold
Title.TextSize = 22
Title.TextColor3 = Color3.fromRGB(255, 0, 0)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.BackgroundTransparency = 1

-- Toggle Button
local ToggleButton = Instance.new("TextButton", Frame)
ToggleButton.Text = "Activate"
ToggleButton.Font = Enum.Font.GothamBold
ToggleButton.TextSize = 18
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Size = UDim2.new(1, -20, 0, 40)
ToggleButton.Position = UDim2.new(0, 10, 0, 50)
ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
local UICornerToggle = Instance.new("UICorner", ToggleButton)
UICornerToggle.CornerRadius = UDim.new(0, 8)

-- Speed Label & Input
local SpeedLabel = Instance.new("TextLabel", Frame)
SpeedLabel.Text = "Speed:"
SpeedLabel.Font = Enum.Font.Gotham
SpeedLabel.TextSize = 16
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedLabel.Size = UDim2.new(0, 100, 0, 30)
SpeedLabel.Position = UDim2.new(0, 10, 0, 100)
SpeedLabel.BackgroundTransparency = 1

local SpeedInput = Instance.new("TextBox", Frame)
SpeedInput.Text = "100"
SpeedInput.Font = Enum.Font.Gotham
SpeedInput.TextSize = 16
SpeedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedInput.Size = UDim2.new(0, 180, 0, 30)
SpeedInput.Position = UDim2.new(0, 120, 0, 100)
SpeedInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

-- Range Label & Input
local RangeLabel = Instance.new("TextLabel", Frame)
RangeLabel.Text = "Range:"
RangeLabel.Font = Enum.Font.Gotham
RangeLabel.TextSize = 16
RangeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeLabel.Size = UDim2.new(0, 100, 0, 30)
RangeLabel.Position = UDim2.new(0, 10, 0, 140)
RangeLabel.BackgroundTransparency = 1

local RangeInput = Instance.new("TextBox", Frame)
RangeInput.Text = "20"
RangeInput.Font = Enum.Font.Gotham
RangeInput.TextSize = 16
RangeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
RangeInput.Size = UDim2.new(0, 180, 0, 30)
RangeInput.Position = UDim2.new(0, 120, 0, 140)
RangeInput.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

-- Variables
local active = false
local speed = 100
local range = 20
local unanchoredParts = {}
local movers = {}

-- Collect all unanchored parts in the game
local function collectParts()
    unanchoredParts = {}
    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and not part.Anchored and not part:IsDescendantOf(Character) then
            table.insert(unanchoredParts, part)
            part.Massless = true
            part.CanCollide = false
            for _, bp in ipairs(part:GetChildren()) do
                if bp:IsA("BodyPosition") then
                    bp:Destroy()
                end
            end
        end
    end
end

-- Create BodyPosition movers for parts
local function createMovers()
    movers = {}
    for _, part in ipairs(unanchoredParts) do
        local mover = Instance.new("BodyPosition")
        mover.Parent = part
        mover.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
        mover.D = 10
        mover.P = 50000
        table.insert(movers, mover)
    end
end

-- Start the Ring mode
local function startRing()
    if active then return end
    active = true
    collectParts()
    createMovers()

    local angle = 0
    local connection
    connection = RunService.Heartbeat:Connect(function(delta)
        if not active then
            connection:Disconnect()
            for _, mover in ipairs(movers) do
                mover:Destroy()
            end
            return
        end

        angle = angle + delta * speed
        for i, mover in ipairs(movers) do
            local theta = angle + (i / #movers) * math.pi * 2
            local offset = Vector3.new(math.cos(theta) * range, 5, math.sin(theta) * range)
            mover.Position = RootPart.Position + offset
        end
    end)
end

-- Stop the Ring mode
local function stopRing()
    active = false
    for _, mover in ipairs(movers) do
        mover:Destroy()
    end
end

-- Toggle Activation
ToggleButton.MouseButton1Click:Connect(function()
    if active then
        ToggleButton.Text = "Activate"
        stopRing()
    else
        ToggleButton.Text = "Deactivate"
        startRing()
    end
end)

-- Speed Input Handling
SpeedInput.FocusLost:Connect(function()
    local value = tonumber(SpeedInput.Text)
    if value then
        speed = math.clamp(value, 10, 500)
    else
        SpeedInput.Text = tostring(speed)
    end
end)

-- Range Input Handling
RangeInput.FocusLost:Connect(function()
    local value = tonumber(RangeInput.Text)
    if value then
        range = math.clamp(value, 5, 100)
    else
        RangeInput.Text = tostring(range)
    end
end)

-- Teleport player to mouse position when CTRL is pressed
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.LeftControl then
        local mousePosition = Mouse.Hit.p
        RootPart.CFrame = CFrame.new(mousePosition)
    end
end)
