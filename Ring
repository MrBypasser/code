local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local RootPart = Character:WaitForChild("HumanoidRootPart")
local Mouse = LocalPlayer:GetMouse()

-- Function to reload script faster
local function reExecute()
    local scriptUrl = "https://raw.githubusercontent.com/MrBypasser/code/refs/heads/main/Ring"
    local success, response = pcall(function()
        return game:HttpGet(scriptUrl, true)
    end)
    if success then
        loadstring(response)()
    else
        warn("Failed to reload script:", response)
    end
end

-- GUI Setup
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false
ScreenGui.Enabled = true

local Frame = Instance.new("Frame", ScreenGui)
Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Frame.Size = UDim2.new(0, 250, 0, 180)
Frame.Position = UDim2.new(0.4, 0, 0.2, 0)
Frame.Active, Frame.Draggable = true, true
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 8)

local Title = Instance.new("TextLabel", Frame)
Title.Text, Title.Font, Title.TextSize, Title.TextColor3 = "Ring of DEATH", Enum.Font.GothamBold, 18, Color3.fromRGB(255, 0, 0)
Title.Size, Title.BackgroundTransparency = UDim2.new(1, 0, 0, 30), 1

local ToggleButton = Instance.new("TextButton", Frame)
ToggleButton.Text, ToggleButton.Font, ToggleButton.TextSize = "Activate", Enum.Font.GothamBold, 16
ToggleButton.Size, ToggleButton.Position = UDim2.new(1, -10, 0, 30), UDim2.new(0, 5, 0, 40)
ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

local SpeedSlider, DistanceSlider = Instance.new("TextBox", Frame), Instance.new("TextBox", Frame)
SpeedSlider.Text, DistanceSlider.Text = "100", "20"
for _, slider in pairs({SpeedSlider, DistanceSlider}) do
    slider.Font, slider.TextSize, slider.TextColor3 = Enum.Font.Gotham, 14, Color3.fromRGB(255, 255, 255)
    slider.Size, slider.BackgroundColor3 = UDim2.new(1, -10, 0, 20), Color3.fromRGB(50, 50, 50)
end
SpeedSlider.Position, DistanceSlider.Position = UDim2.new(0, 5, 0, 110), UDim2.new(0, 5, 0, 140)

-- Ring Functionality
local active, speed, distance, unanchoredParts, movers = false, 100, 20, {}, {}

local function collectParts()
    unanchoredParts = {}
    for _, part in ipairs(workspace:GetDescendants()) do
        if part:IsA("BasePart") and not part.Anchored and not part:IsDescendantOf(Character) then
            part.Massless, part.CanCollide = true, false
            table.insert(unanchoredParts, part)
            for _, force in ipairs(part:GetChildren()) do
                if force:IsA("VectorForce") then force:Destroy() end
            end
        end
    end
end

local function createMovers()
    movers = {}
    for _, part in ipairs(unanchoredParts) do
        local mover = Instance.new("VectorForce", part)
        mover.Force = Vector3.new(0, 0, 0)
        mover.ApplyAtCenterOfMass = true
        table.insert(movers, mover)
    end
end

local function startRing()
    if active then return end
    active, angle = true, 0
    collectParts()
    createMovers()
    local connection = RunService.Heartbeat:Connect(function(delta)
        if not active or not Character or not RootPart or Character:FindFirstChild("Humanoid").Health <= 0 then
            connection:Disconnect()
            for _, mover in ipairs(movers) do mover:Destroy() end
            return
        end
        angle = angle + delta * speed
        for i, mover in ipairs(movers) do
            local theta = angle + (i / #movers) * math.pi * 2
            local offset = Vector3.new(math.cos(theta) * distance, 5, math.sin(theta) * distance)
            mover.Force = (RootPart.Position + offset - mover.Parent.Position) * 500
        end
    end)
end

local function stopRing()
    active = false
    for _, mover in ipairs(movers) do mover:Destroy() end
end

ToggleButton.MouseButton1Click:Connect(function()
    if active then ToggleButton.Text, stopRing() = "Activate", stopRing()
    else ToggleButton.Text, startRing() = "Deactivate", startRing() end
end)

SpeedSlider.FocusLost:Connect(function()
    local value = tonumber(SpeedSlider.Text)
    speed = value and math.clamp(value, 10, 500) or speed
    SpeedSlider.Text = tostring(speed)
end)

DistanceSlider.FocusLost:Connect(function()
    local value = tonumber(DistanceSlider.Text)
    distance = value and math.clamp(value, 5, 100) or distance
    DistanceSlider.Text = tostring(distance)
end)

-- Auto Restart on Death
local function onCharacterAdded(newCharacter)
    Character, RootPart = newCharacter, newCharacter:WaitForChild("HumanoidRootPart")
    local humanoid = newCharacter:WaitForChild("Humanoid")
    humanoid.Died:Connect(function()
        ScreenGui:Destroy()
        active = false
        for _, mover in ipairs(movers) do mover:Destroy() end
        wait(2)
        reExecute()
    end)
end
LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
onCharacterAdded(Character)
